@model IEnumerable<Project1640.Models.Idea>

@{
    TempData["UserEmail"] = TempData["UserEmail"];
    TempData["UserId"] = TempData["UserId"];
    Layout = "~/Views/Coor/_LayoutCoor.cshtml";
    int No = Int16.Parse(TempData["PageNo"].ToString());
    int first = (No - 1) * 5;
    int last = No * 5;
    int a = 0;
    string Anonymously = "Anonymously";
}

<div class="container_header">
    <h1>List Blog</h1>
    <span>Post ideas to give your opinion or interact with other ideas.</span>
</div>

<div class="container_blog">

    <div class="blog_all-item">

        <div class="filter">
            <div class="filter_item">
                @Html.ActionLink("Top View", "TopView")
            </div>        
        </div>

        @foreach (var c in Model)
        {
            if (a >= first && a < last)
            {
                <div class="blog_item left-to-right">
                    <div class="blog_item-header">
                        <div class="blog_avatar">
                            <i class="fa-solid fa-user"></i>
                            <span>
                                @{
                                    if (c.Status == true)
                                    {
                                        { Html.RenderAction("ShowUser", "Coor", new { UserId = c.UserId }); }
                                    }
                                    else
                                    {
                                        @Html.DisplayName(Anonymously)
                                    }
                                }
                            </span>
                        </div>

                        <div class="blog_item-option">

                            <div class="dropdown">
                                <i class="btn btn-secondary fa-solid fa-ellipsis" type="i" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                </i>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                    <li><a class="dropdown-item" href="#">Copy Link</a></li>
                                </ul>
                            </div>

                        </div>
                    </div>

                    <div class="blog_content">

                        <a href="@Url.Action("ViewIdea", new {IdeaId = c.Id, CategoryId = c.CategoryId})">
                            <h1>@Html.DisplayFor(model => c.Title)</h1>
                        </a>

                        <span>@Html.DisplayFor(model => c.Content)</span>

                    </div>

                    <div class="blog_time">
                        <span>@Html.DisplayFor(model => c.Date)</span>
                    </div>
                </div>
            }
            a++;
        }

        <ul class="pagination">

            @for (int i = 1; i <= Int16.Parse(TempData["PageMax"].ToString()); i++)
            {
                if (i == 1)
                {
                    <li>
                        <a href="@Url.Action("Index", new {id = i})">
                            <i class="fa-solid fa-caret-left"></i>
                        </a>
                    </li>
                }
                if (TempData["PageNo"] != null && (Int16.Parse(TempData["PageNo"].ToString()) - 2) <= i
                    && TempData["PageNo"] != null && (Int16.Parse(TempData["PageNo"].ToString()) + 2) >= i)
                {
                    if (TempData["CategoryId"] != null)
                    {
                        if (TempData["PageNo"] != null && Int16.Parse(TempData["PageNo"].ToString()) == i)
                        {
                            <li>
                                <a href="@Url.Action("Index", new {id = i, categoryId = Int16.Parse(TempData["CategoryId"].ToString())})" style="color: red;">@i</a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.Action("Index", new {id = i, categoryId = Int16.Parse(TempData["CategoryId"].ToString())})">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        if (TempData["PageNo"] != null && Int16.Parse(TempData["PageNo"].ToString()) == i)
                        {
                            <li>
                                <a href="@Url.Action("Index", new {id = i})" style="color: red;">@i</a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.Action("Index", new {id = i})">@i</a>
                            </li>
                        }
                    }

                }

            }

            <li>

                <a href="@Url.Action("Index", new {id = Int16.Parse(TempData["PageMax"].ToString())})">
                    <i class="fa-solid fa-caret-right"></i>
                </a>
            </li>

        </ul>

    </div>

    <div class="blog_all-categories">
        <h2>All Categories</h2>

        <div class="blog_categories">
            @{Html.RenderAction("ShowAllCategory", "Coor");}
        </div>
    </div>

</div>



<script>

    var blogItem = document.querySelectorAll('.blog_item')

    function scrollHandleAnimation(e) {
        var rect = e.getClientRects()[0]
        var heightScreen = window.innerHeight

        if (!(rect.bottom < 0 || heightScreen.top > heightScreen)) {
            e.classList.add('start')
        } else {
            e.classList.remove('start')
        }
    }

    function checkElement() {
        blogItem.forEach(e => {
            scrollHandleAnimation(e)
        })
    }

    window.onscroll = checkElement

</script>
