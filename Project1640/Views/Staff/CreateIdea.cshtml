@model Project1640.Models.Idea

@{
    Layout = null;

}

@{ List<int> category = new List<int>();
    if (TempData["Category"] != null)
    {
        category = TempData["Category"].ToString().Split(',').
            Select(o => Int32.Parse(o)).ToList();
    }

    else if (Model != null)
    {
        category = Model.listCategory.Select(f => f.Id).ToList();
    }
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreateIdea</title>
</head>
<body>
    @using (Html.BeginForm("CreateIdea", "Staff", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Idea</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-6">
            <label>Category</label>
            <div class="multiselect" style="margin-right:20px">
                <div id="checkboxes">
                    @foreach (var f in ViewBag.Formats)
                    {
                        <input class="form-check-input" type="checkbox"
                               value="@f.Id" id="@f.Name" name="formatIds[]"
                               @(category.Contains(f.Id) ? "checked" : string.Empty)>
                        <label class="form-check-label" for="@f.Name">
                            @f.Name
                        </label>
                    }
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <label>Upload File:</label>
        <input type="file" name="postedFile" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
